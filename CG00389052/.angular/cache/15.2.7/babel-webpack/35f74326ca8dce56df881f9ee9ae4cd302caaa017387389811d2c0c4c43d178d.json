{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/lecturer.service\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateLecturerComponent {\n  constructor(route, lecturerService) {\n    this.route = route;\n    this.lecturerService = lecturerService;\n    this.lid = ''; // Initialize lid to an empty string\n    this.name = '';\n    this.taxBand = '';\n    this.salaryScale = 0;\n  }\n  ngOnInit() {\n    const lidParam = this.route.snapshot.paramMap.get('lid');\n    if (lidParam !== null) {\n      this.lid = lidParam;\n    } else {\n      // Handle the case where the lid is null or undefined\n    }\n  }\n  onSubmit() {\n    this.lecturerService.updateLecturer(this.lid, this.name, this.taxBand, this.salaryScale).subscribe(result => {\n      console.log(result);\n      // Handle the response here\n    }, error => {\n      console.log(error);\n      // Handle the error here\n    });\n  }\n}\n\nUpdateLecturerComponent.ɵfac = function UpdateLecturerComponent_Factory(t) {\n  return new (t || UpdateLecturerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.LecturerService));\n};\nUpdateLecturerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateLecturerComponent,\n  selectors: [[\"app-update-lecturer\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"lid\", \"disabled\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"taxBand\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"salaryScale\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function UpdateLecturerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Update Lecturer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateLecturerComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(3, \" LID: \");\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateLecturerComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.lecturer.lid = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"br\");\n      i0.ɵɵtext(6, \" Name: \");\n      i0.ɵɵelementStart(7, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateLecturerComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.lecturer.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵtext(9, \" Tax Band: \");\n      i0.ɵɵelementStart(10, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateLecturerComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.lecturer.taxBand = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵtext(12, \" Salary Scale: \");\n      i0.ɵɵelementStart(13, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateLecturerComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.lecturer.salaryScale = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\")(15, \"br\");\n      i0.ɵɵelementStart(16, \"button\", 5);\n      i0.ɵɵtext(17, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.lecturer.lid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.lecturer.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.lecturer.taxBand);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.lecturer.salaryScale);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,uBAAuB;EAMlCC,YACUC,KAAqB,EACrBC,eAAgC;IADhC,UAAK,GAALD,KAAK;IACL,oBAAe,GAAfC,eAAe;IAPzB,QAAG,GAAW,EAAE,CAAC,CAAC;IAClB,SAAI,GAAW,EAAE;IACjB,YAAO,GAAW,EAAE;IACpB,gBAAW,GAAW,CAAC;EAKpB;EAEHC,QAAQ;IACN,MAAMC,QAAQ,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,KAAK,CAAC;IACxD,IAAIH,QAAQ,KAAK,IAAI,EAAE;MACrB,IAAI,CAACI,GAAG,GAAGJ,QAAQ;KACpB,MAAM;MACL;IAAA;EAEJ;EAEAK,QAAQ;IACN,IAAI,CAACP,eAAe,CAACQ,cAAc,CACjC,IAAI,CAACF,GAAG,EACR,IAAI,CAACG,IAAI,EACT,IAAI,CAACC,OAAO,EACZ,IAAI,CAACC,WAAW,CACjB,CAACC,SAAS,CAACC,MAAM,IAAG;MACnBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB;IACF,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MAClB;IACF,CAAC,CAAC;EACJ;;;AAjCWnB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTpCC,0BAAI;MAAAA,+BAAe;MAAAA,iBAAK;MAExBA,+BAA8B;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC3BD,sBAAK;MAAAA,gCAAkE;MAApCA;QAAA;MAAA,EAA0B;MAAxDA,iBAAkE;MAAAA,qBAAI;MAC3EA,uBAAM;MAAAA,gCAA2D;MAA5BA;QAAA;MAAA,EAA2B;MAA1DA,iBAA2D;MAACA,qBAAI;MACtEA,2BAAU;MAAAA,iCAAiE;MAA/BA;QAAA;MAAA,EAA8B;MAAhEA,iBAAiE;MAACA,sBAAI;MAChFA,gCAAc;MAAAA,iCAA2E;MAAnCA;QAAA;MAAA,EAAkC;MAA1EA,iBAA2E;MAACA,sBAAI;MAE9FA,kCAAsB;MAAAA,uBAAM;MAAAA,iBAAS;;;MALFA,eAA0B;MAA1BA,0CAA0B;MACxBA,eAA2B;MAA3BA,2CAA2B;MACpBA,eAA8B;MAA9BA,8CAA8B;MACpBA,eAAkC;MAAlCA,kDAAkC","names":["UpdateLecturerComponent","constructor","route","lecturerService","ngOnInit","lidParam","snapshot","paramMap","get","lid","onSubmit","updateLecturer","name","taxBand","salaryScale","subscribe","result","console","log","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/rohansikder/Developer/AdvDataCentric/CG00389052/src/components/update-lecturer/update-lecturer.component.ts","/Users/rohansikder/Developer/AdvDataCentric/CG00389052/src/components/update-lecturer/update-lecturer.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LecturerService } from '../../services/lecturer.service';\n\n@Component({\n  selector: 'app-update-lecturer',\n  templateUrl: './update-lecturer.component.html',\n  styleUrls: ['./update-lecturer.component.css']\n})\nexport class UpdateLecturerComponent implements OnInit {\n  lid: string = ''; // Initialize lid to an empty string\n  name: string = '';\n  taxBand: string = '';\n  salaryScale: number = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private lecturerService: LecturerService\n  ) {}\n\n  ngOnInit(): void {\n    const lidParam = this.route.snapshot.paramMap.get('lid');\n    if (lidParam !== null) {\n      this.lid = lidParam;\n    } else {\n      // Handle the case where the lid is null or undefined\n    }\n  }\n\n  onSubmit(): void {\n    this.lecturerService.updateLecturer(\n      this.lid,\n      this.name,\n      this.taxBand,\n      this.salaryScale\n    ).subscribe(result => {\n      console.log(result);\n      // Handle the response here\n    }, error => {\n      console.log(error);\n      // Handle the error here\n    });\n  }\n}\n","<h3>Update Lecturer</h3>\n\n<form (ngSubmit)=\"onSubmit()\">\n  LID: <input type=\"text\" name=\"lid\" [(ngModel)]=\"lecturer.lid\" disabled><br>\n  Name: <input type=\"text\" name=\"name\" [(ngModel)]=\"lecturer.name\"> <br>\n  Tax Band: <input type=\"text\" name=\"taxBand\" [(ngModel)]=\"lecturer.taxBand\"> <br>\n  Salary Scale: <input type=\"number\" name=\"salaryScale\" [(ngModel)]=\"lecturer.salaryScale\"> <br>\n  <br>\n  <button type=\"submit\">Submit</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}