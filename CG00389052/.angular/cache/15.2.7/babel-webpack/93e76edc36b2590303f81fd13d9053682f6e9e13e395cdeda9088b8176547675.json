{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/lecturer.service\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateLecturerComponent {\n  constructor(route, lecturerService, router, fb) {\n    this.route = route;\n    this.lecturerService = lecturerService;\n    this.router = router;\n    this.fb = fb;\n    this.lid = '';\n  }\n  ngOnInit() {\n    const lidParam = this.route.snapshot.paramMap.get('lid');\n    if (lidParam !== null) {\n      this.lid = lidParam;\n    } else {\n      console.log(\"Lid Is not available\");\n    }\n    this.lecturerForm = this.fb.group({\n      name: ['', Validators.required],\n      taxBand: ['', Validators.required],\n      salaryScale: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.lecturerForm.valid) {\n      this.lecturerService.updateLecturer(this.lid, this.lecturerForm.value.name, this.lecturerForm.value.taxBand, this.lecturerForm.value.salaryScale).subscribe(result => {\n        console.log(result);\n        this.router.navigate(['/lecturers']);\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n}\nUpdateLecturerComponent.ɵfac = function UpdateLecturerComponent_Factory(t) {\n  return new (t || UpdateLecturerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.LecturerService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nUpdateLecturerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateLecturerComponent,\n  selectors: [[\"app-update-lecturer\"]],\n  decls: 22,\n  vars: 4,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"lid\", \"readonly\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"taxBand\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"salaryScale\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function UpdateLecturerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Update Lecturer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateLecturerComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"label\");\n      i0.ɵɵtext(4, \" LID: \");\n      i0.ɵɵelementStart(5, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateLecturerComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.lid = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementStart(7, \"label\");\n      i0.ɵɵtext(8, \" Name: \");\n      i0.ɵɵelementStart(9, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateLecturerComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"label\");\n      i0.ɵɵtext(12, \" Tax Band: \");\n      i0.ɵɵelementStart(13, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateLecturerComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.taxBand = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"label\");\n      i0.ɵɵtext(16, \" Salary Scale: \");\n      i0.ɵɵelementStart(17, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateLecturerComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.salaryScale = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"br\")(19, \"br\");\n      i0.ɵɵelementStart(20, \"button\", 5);\n      i0.ɵɵtext(21, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.lid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.taxBand);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.salaryScale);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,uBAAuB;EAIlCC,YACUC,KAAqB,EACrBC,eAAgC,EAChCC,MAAc,EACdC,EAAe;IAHf,UAAK,GAALH,KAAK;IACL,oBAAe,GAAfC,eAAe;IACf,WAAM,GAANC,MAAM;IACN,OAAE,GAAFC,EAAE;IAPZ,QAAG,GAAW,EAAE;EAQb;EAEHC,QAAQ;IACN,MAAMC,QAAQ,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,KAAK,CAAC;IACxD,IAAIH,QAAQ,KAAK,IAAI,EAAE;MACrB,IAAI,CAACI,GAAG,GAAGJ,QAAQ;KACpB,MAAM;MACLK,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;IAGrC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACT,EAAE,CAACU,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACkB,QAAQ,CAAC;MAC/BC,OAAO,EAAE,CAAC,EAAE,EAAEnB,UAAU,CAACkB,QAAQ,CAAC;MAClCE,WAAW,EAAE,CAAC,EAAE,EAAEpB,UAAU,CAACkB,QAAQ;KACtC,CAAC;EACJ;EAEAG,QAAQ;IACN,IAAI,IAAI,CAACN,YAAY,CAACO,KAAK,EAAE;MAC3B,IAAI,CAAClB,eAAe,CAACmB,cAAc,CACjC,IAAI,CAACX,GAAG,EACR,IAAI,CAACG,YAAY,CAACS,KAAK,CAACP,IAAI,EAC5B,IAAI,CAACF,YAAY,CAACS,KAAK,CAACL,OAAO,EAC/B,IAAI,CAACJ,YAAY,CAACS,KAAK,CAACJ,WAAW,CACpC,CAACK,SAAS,CAACC,MAAM,IAAG;QACnBb,OAAO,CAACC,GAAG,CAACY,MAAM,CAAC;QACnB,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtC,CAAC,EAAEC,KAAK,IAAG;QACTf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;MACpB,CAAC,CAAC;;EAEN;;AAxCW3B,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXpCC,0BAAI;MAAAA,+BAAe;MAAAA,iBAAK;MAExBA,+BAA8B;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACzBD,6BAAO;MACHA,sBACA;MAAAA,gCAAyD;MAA3BA;QAAA;MAAA,EAAiB;MAA/CA,iBAAyD;MACrDA,qBAAI;MACZA,6BAAO;MACHA,uBACA;MAAAA,gCAA2D;MAA5BA;QAAA;MAAA,EAAkB;MAAjDA,iBAA2D;MACvDA,sBAAI;MACZA,8BAAO;MACHA,4BACA;MAAAA,iCAAiE;MAA/BA;QAAA;MAAA,EAAqB;MAAvDA,iBAAiE;MAC7DA,sBAAI;MACZA,8BAAO;MACHA,gCACA;MAAAA,iCAA2E;MAAnCA;QAAA;MAAA,EAAyB;MAAjEA,iBAA2E;MACvEA,sBAAI;MAEZA,kCAAsB;MAAAA,uBAAM;MAAAA,iBAAS;;;MAfHA,eAAiB;MAAjBA,iCAAiB;MAIhBA,eAAkB;MAAlBA,kCAAkB;MAIfA,eAAqB;MAArBA,qCAAqB;MAIfA,eAAyB;MAAzBA,yCAAyB","names":["Validators","UpdateLecturerComponent","constructor","route","lecturerService","router","fb","ngOnInit","lidParam","snapshot","paramMap","get","lid","console","log","lecturerForm","group","name","required","taxBand","salaryScale","onSubmit","valid","updateLecturer","value","subscribe","result","navigate","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/rohansikder/Developer/AdvDataCentric/CG00389052/src/components/update-lecturer/update-lecturer.component.ts","/Users/rohansikder/Developer/AdvDataCentric/CG00389052/src/components/update-lecturer/update-lecturer.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LecturerService } from '../../services/lecturer.service';\n\n@Component({\n  selector: 'app-update-lecturer',\n  templateUrl: './update-lecturer.component.html',\n  styleUrls: ['./update-lecturer.component.css']\n})\nexport class UpdateLecturerComponent implements OnInit {\n  lid: string = '';\n  lecturerForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private lecturerService: LecturerService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    const lidParam = this.route.snapshot.paramMap.get('lid');\n    if (lidParam !== null) {\n      this.lid = lidParam;\n    } else {\n      console.log(\"Lid Is not available\")\n    }\n\n    this.lecturerForm = this.fb.group({\n      name: ['', Validators.required],\n      taxBand: ['', Validators.required],\n      salaryScale: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.lecturerForm.valid) {\n      this.lecturerService.updateLecturer(\n        this.lid,\n        this.lecturerForm.value.name,\n        this.lecturerForm.value.taxBand,\n        this.lecturerForm.value.salaryScale\n      ).subscribe(result => {\n        console.log(result);\n        this.router.navigate(['/lecturers']);\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n}\n","<h3>Update Lecturer</h3>\n\n<form (ngSubmit)=\"onSubmit()\">\n    <label>\n        LID:\n        <input type=\"text\" name=\"lid\" [(ngModel)]=\"lid\" readonly>\n    </label><br>\n    <label>\n        Name:\n        <input type=\"text\" name=\"name\" [(ngModel)]=\"name\" required>\n    </label><br>\n    <label>\n        Tax Band:\n        <input type=\"text\" name=\"taxBand\" [(ngModel)]=\"taxBand\" required>\n    </label><br>\n    <label>\n        Salary Scale:\n        <input type=\"number\" name=\"salaryScale\" [(ngModel)]=\"salaryScale\" required>\n    </label><br>\n    <br>\n    <button type=\"submit\">Submit</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}